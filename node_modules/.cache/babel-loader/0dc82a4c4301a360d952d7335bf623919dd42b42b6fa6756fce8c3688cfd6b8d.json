{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Slideshow/Slideshow.js\",\n  _s = $RefreshSig$();\n// Import necessary hooks and dependencies from React\nimport React, { useState, useEffect, useRef } from 'react';\n// Import the stylesheet for styling the slideshow\nimport './Slideshow.css';\n\n// Slideshow component definition. This component takes 'slides' as a prop.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = ({\n  slides\n}) => {\n  _s();\n  // State to keep track of the current slide\n  const [currentSlide, setCurrentSlide] = useState(0);\n  // State to track the previous slide for transition effects\n  const [prevSlide, setPrevSlide] = useState(null);\n  // Reference for the interval to enable automatic slide change\n  const intervalRef = useRef(null);\n\n  // Function to go to the next slide\n  const nextSlide = () => {\n    // Update the previous slide before changing the current slide\n    setPrevSlide(currentSlide);\n    // Change to the next slide, wrapping around if at the end\n    setCurrentSlide(prev => (prev + 1) % slides.length);\n  };\n\n  // Function to generate the style for each slide\n  // Function to generate the style for each slide\n  // const getSlideStyle = (slide, index) => {\n  //   let backgroundImage = `url(${slide.image})`;\n\n  //   // Check if the slide is a GIF and it's the current slide\n  //   if (slide.image.endsWith('.gif') && index === currentSlide) {\n  //     const uniqueString = new Date().getTime();\n  //     backgroundImage = `url(${slide.image}?unique=${uniqueString})`;\n  //   }\n\n  //   return { backgroundImage };\n  // };\n\n  // useEffect hook to set up and clean up the interval for auto slide changing\n  useEffect(() => {\n    // Set an interval for the slide change\n    intervalRef.current = setInterval(nextSlide, 3000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => clearInterval(intervalRef.current);\n  }, [currentSlide, slides.length]);\n\n  // Render the slideshow component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: slides === null || slides === void 0 ? void 0 : slides.map((slide, index) => {\n      var _slide$captions;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `slide ${index === currentSlide ? 'active' : ''} ${index === prevSlide ? 'previous' : ''}`,\n        style: {\n          backgroundImage: `url(${slide.image})`\n        },\n        children: (_slide$captions = slide.captions) === null || _slide$captions === void 0 ? void 0 : _slide$captions.map((caption, captionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caption\",\n          style: {\n            backgroundColor: caption.style.backgroundColor,\n            color: caption.style.color\n          },\n          children: caption.text\n        }, captionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the Slideshow component for use in other parts of the application\n_s(Slideshow, \"xnx69Wky6KdO35tNfukzd3ThiOM=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Slideshow","slides","_s","currentSlide","setCurrentSlide","prevSlide","setPrevSlide","intervalRef","nextSlide","prev","length","current","setInterval","clearInterval","className","children","map","slide","index","_slide$captions","style","backgroundImage","image","captions","caption","captionIndex","backgroundColor","color","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Slideshow/Slideshow.js"],"sourcesContent":["// Import necessary hooks and dependencies from React\nimport React, { useState, useEffect, useRef } from 'react';\n// Import the stylesheet for styling the slideshow\nimport './Slideshow.css';\n\n// Slideshow component definition. This component takes 'slides' as a prop.\nconst Slideshow = ({ slides }) => {\n  // State to keep track of the current slide\n  const [currentSlide, setCurrentSlide] = useState(0);\n  // State to track the previous slide for transition effects\n  const [prevSlide, setPrevSlide] = useState(null);\n  // Reference for the interval to enable automatic slide change\n  const intervalRef = useRef(null);\n\n  // Function to go to the next slide\n  const nextSlide = () => {\n    // Update the previous slide before changing the current slide\n    setPrevSlide(currentSlide);\n    // Change to the next slide, wrapping around if at the end\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  // Function to generate the style for each slide\n// Function to generate the style for each slide\n// const getSlideStyle = (slide, index) => {\n//   let backgroundImage = `url(${slide.image})`;\n\n//   // Check if the slide is a GIF and it's the current slide\n//   if (slide.image.endsWith('.gif') && index === currentSlide) {\n//     const uniqueString = new Date().getTime();\n//     backgroundImage = `url(${slide.image}?unique=${uniqueString})`;\n//   }\n\n//   return { backgroundImage };\n// };\n\n\n  // useEffect hook to set up and clean up the interval for auto slide changing\n  useEffect(() => {\n    // Set an interval for the slide change\n    intervalRef.current = setInterval(nextSlide, 3000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => clearInterval(intervalRef.current);\n  }, [currentSlide, slides.length]);\n\n  // Render the slideshow component\n  return (\n    <div className=\"slideshow\">\n      {/* Use optional chaining to ensure slides is an array */}\n      {slides?.map((slide, index) => (\n        <div\n          key={index}\n          className={`slide ${index === currentSlide ? 'active' : ''} ${index === prevSlide ? 'previous' : ''}`}\n          style={{ backgroundImage: `url(${slide.image})` }}\n        >\n          {/* Use optional chaining to ensure captions is an array */}\n          {slide.captions?.map((caption, captionIndex) => (\n            <div \n              key={captionIndex}\n              className=\"caption\"\n              style={{ backgroundColor: caption.style.backgroundColor, color: caption.style.color }}\n            >\n              {caption.text}\n            </div>\n          ))}\n\n        </div>\n      ))}\n    </div>\n  );\n\n};\n\n// Export the Slideshow component for use in other parts of the application\nexport default Slideshow;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D;AACA,OAAO,iBAAiB;;AAExB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD;EACA,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD;EACA,MAAMY,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAF,YAAY,CAACH,YAAY,CAAC;IAC1B;IACAC,eAAe,CAAEK,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIR,MAAM,CAACS,MAAM,CAAC;EACvD,CAAC;;EAED;EACF;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGE;EACAd,SAAS,CAAC,MAAM;IACd;IACAW,WAAW,CAACI,OAAO,GAAGC,WAAW,CAACJ,SAAS,EAAE,IAAI,CAAC;;IAElD;IACA,OAAO,MAAMK,aAAa,CAACN,WAAW,CAACI,OAAO,CAAC;EACjD,CAAC,EAAE,CAACR,YAAY,EAAEF,MAAM,CAACS,MAAM,CAAC,CAAC;;EAEjC;EACA,oBACEX,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,EAEvBd,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK;MAAA,IAAAC,eAAA;MAAA,oBACxBpB,OAAA;QAEEe,SAAS,EAAG,SAAQI,KAAK,KAAKf,YAAY,GAAG,QAAQ,GAAG,EAAG,IAAGe,KAAK,KAAKb,SAAS,GAAG,UAAU,GAAG,EAAG,EAAE;QACtGe,KAAK,EAAE;UAAEC,eAAe,EAAG,OAAMJ,KAAK,CAACK,KAAM;QAAG,CAAE;QAAAP,QAAA,GAAAI,eAAA,GAGjDF,KAAK,CAACM,QAAQ,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBH,GAAG,CAAC,CAACQ,OAAO,EAAEC,YAAY,kBACzC1B,OAAA;UAEEe,SAAS,EAAC,SAAS;UACnBM,KAAK,EAAE;YAAEM,eAAe,EAAEF,OAAO,CAACJ,KAAK,CAACM,eAAe;YAAEC,KAAK,EAAEH,OAAO,CAACJ,KAAK,CAACO;UAAM,CAAE;UAAAZ,QAAA,EAErFS,OAAO,CAACI;QAAI,GAJRH,YAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKd,CACN;MAAC,GAbGd,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeP,CAAC;IAAA,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGV,CAAC;;AAED;AAAA9B,EAAA,CApEMF,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAqEf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}