{"ast":null,"code":"// animateLines.js\nimport { gsap } from 'gsap';\nexport const AnimateLines = (containerSelector, circleRadius) => {\n  const container = document.querySelector(containerSelector);\n  const numberOfLines = 8;\n  const angleIncrement = 360 / numberOfLines;\n  for (let i = 0; i < numberOfLines; i++) {\n    const line = document.createElement('div');\n    line.classList.add('line');\n\n    // Set the initial rotation and translation of the line\n    const angle = i * angleIncrement;\n    line.style.transform = `rotate(${angle}deg) translate(${circleRadius}px)`;\n    container.appendChild(line);\n\n    // GSAP animation\n    gsap.fromTo(line, {\n      scale: 0,\n      transformOrigin: '0% 50%' // origin at the center of the line\n    }, {\n      scale: 1,\n      opacity: 1,\n      duration: 0.5,\n      ease: 'elastic.out(1, 0.3)',\n      onComplete: () => gsap.to(line, {\n        opacity: 0,\n        duration: 0.5\n      })\n    });\n  }\n};\n_c = AnimateLines;\nvar _c;\n$RefreshReg$(_c, \"AnimateLines\");","map":{"version":3,"names":["gsap","AnimateLines","containerSelector","circleRadius","container","document","querySelector","numberOfLines","angleIncrement","i","line","createElement","classList","add","angle","style","transform","appendChild","fromTo","scale","transformOrigin","opacity","duration","ease","onComplete","to","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Home/AnimateLines.js"],"sourcesContent":["// animateLines.js\nimport { gsap } from 'gsap';\n\n\nexport const AnimateLines = (containerSelector, circleRadius) => {\n    const container = document.querySelector(containerSelector);\n    const numberOfLines = 8;\n    const angleIncrement = 360 / numberOfLines;\n  \n    for (let i = 0; i < numberOfLines; i++) {\n      const line = document.createElement('div');\n      line.classList.add('line');\n      \n      // Set the initial rotation and translation of the line\n      const angle = i * angleIncrement;\n      line.style.transform = `rotate(${angle}deg) translate(${circleRadius}px)`;\n  \n      container.appendChild(line);\n  \n      // GSAP animation\n      gsap.fromTo(line,\n        {\n          scale: 0,\n          transformOrigin: '0% 50%', // origin at the center of the line\n        },\n        {\n          scale: 1,\n          opacity: 1,\n          duration: 0.5,\n          ease: 'elastic.out(1, 0.3)',\n          onComplete: () => gsap.to(line, { opacity: 0, duration: 0.5 })\n        }\n      );\n    }\n  };\n  "],"mappings":"AAAA;AACA,SAASA,IAAI,QAAQ,MAAM;AAG3B,OAAO,MAAMC,YAAY,GAAGA,CAACC,iBAAiB,EAAEC,YAAY,KAAK;EAC7D,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAACJ,iBAAiB,CAAC;EAC3D,MAAMK,aAAa,GAAG,CAAC;EACvB,MAAMC,cAAc,GAAG,GAAG,GAAGD,aAAa;EAE1C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;IACtC,MAAMC,IAAI,GAAGL,QAAQ,CAACM,aAAa,CAAC,KAAK,CAAC;IAC1CD,IAAI,CAACE,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;;IAE1B;IACA,MAAMC,KAAK,GAAGL,CAAC,GAAGD,cAAc;IAChCE,IAAI,CAACK,KAAK,CAACC,SAAS,GAAI,UAASF,KAAM,kBAAiBX,YAAa,KAAI;IAEzEC,SAAS,CAACa,WAAW,CAACP,IAAI,CAAC;;IAE3B;IACAV,IAAI,CAACkB,MAAM,CAACR,IAAI,EACd;MACES,KAAK,EAAE,CAAC;MACRC,eAAe,EAAE,QAAQ,CAAE;IAC7B,CAAC,EACD;MACED,KAAK,EAAE,CAAC;MACRE,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,IAAI,EAAE,qBAAqB;MAC3BC,UAAU,EAAEA,CAAA,KAAMxB,IAAI,CAACyB,EAAE,CAACf,IAAI,EAAE;QAAEW,OAAO,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAC/D,CACF,CAAC;EACH;AACF,CAAC;AAACI,EAAA,GA9BSzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}