{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Home/TypingDots.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingDots = () => {\n  _s();\n  // Refs for managing timers\n  const timer1Ref = useRef(null);\n  const timer2Ref = useRef(null);\n\n  // State for managing the display of elements\n  const [isTyping, setIsTyping] = useState(false);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    setIsTyping(true); // Start typing animation\n\n    // Clear any existing timers\n    clearTimeout(timer1Ref.current);\n    clearTimeout(timer2Ref.current);\n\n    // Start the typing animation with delays\n    timer1Ref.current = setTimeout(() => {\n      setIsTyping(false); // Stop typing animation\n      setMessages(prevMessages => [...prevMessages, \"Hello there! My name is Kevin.\"]);\n      console.log('First message should appear');\n      timer2Ref.current = setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, speechBubbleText2]);\n        console.log('Second message should appear');\n      }, 1200);\n    }, 1200);\n    return () => {\n      // Cleanup timers on component unmount\n      clearTimeout(timer1Ref.current);\n      clearTimeout(timer2Ref.current);\n    };\n  }, []); // Empty dependency array to mimic componentDidMount behavior\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"allSpeechBubblesWrapper\",\n    children: [isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typingDots typingDotsVisible\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !isTyping && messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speechBubble fadeInSlideUp newSpeechBubble\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n_s(TypingDots, \"xdBBaDi5WotYn+gnerGmy8a/cK4=\");\n_c = TypingDots;\nexport default TypingDots;\nvar _c;\n$RefreshReg$(_c, \"TypingDots\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","TypingDots","_s","timer1Ref","timer2Ref","isTyping","setIsTyping","messages","setMessages","clearTimeout","current","setTimeout","prevMessages","console","log","speechBubbleText2","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Home/TypingDots.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst TypingDots = () => {\n  // Refs for managing timers\nconst timer1Ref = useRef(null);\nconst timer2Ref = useRef(null);\n\n  // State for managing the display of elements\nconst [isTyping, setIsTyping] = useState(false);\nconst [messages, setMessages] = useState([]);\n\nuseEffect(() => {\n    setIsTyping(true); // Start typing animation\n\n    // Clear any existing timers\n    clearTimeout(timer1Ref.current);\n    clearTimeout(timer2Ref.current);\n\n    // Start the typing animation with delays\n    timer1Ref.current = setTimeout(() => {\n      setIsTyping(false); // Stop typing animation\n    setMessages(prevMessages => [...prevMessages, \"Hello there! My name is Kevin.\"]);\n    console.log('First message should appear');\n    \n    timer2Ref.current = setTimeout(() => {\n        setMessages(prevMessages => [\n        ...prevMessages,\n        speechBubbleText2,\n        ]);\n        console.log('Second message should appear');\n    }, 1200);\n    }, 1200);\n\n    return () => {\n      // Cleanup timers on component unmount\n    clearTimeout(timer1Ref.current);\n    clearTimeout(timer2Ref.current);\n    };\n  }, []); // Empty dependency array to mimic componentDidMount behavior\nconsole.log(messages);\n\nreturn (\n  <div id=\"allSpeechBubblesWrapper\">\n    {/* Typing dots should be visible only when isTyping is true */}\n    {isTyping && (\n      <div className=\"typingDots typingDotsVisible\">\n        <div className=\"dot\"></div>\n        <div className=\"dot\"></div>\n        <div className=\"dot\"></div>\n      </div>\n    )}\n    {/* Speech bubbles should be visible only when isTyping is false */}\n    {!isTyping && messages.map((message, index) => (\n      <div key={index} className=\"speechBubble fadeInSlideUp newSpeechBubble\">\n        <p>{message}</p>\n      </div>\n    ))}\n  </div>\n);\n\n};\n\nexport default TypingDots;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}