{"ast":null,"code":"// animateLines.js\nimport { gsap } from 'gsap';\nexport const AnimateLines = containerSelector => {\n  const container = document.querySelector(containerSelector);\n  const numberOfLines = 8;\n  const angleIncrement = 360 / numberOfLines;\n  for (let i = 0; i < numberOfLines; i++) {\n    const line = document.createElement('div');\n    line.classList.add('line');\n    container.appendChild(line);\n    gsap.fromTo(line, {\n      scale: 0,\n      rotation: i * angleIncrement,\n      transformOrigin: 'bottom center'\n    }, {\n      scale: 1,\n      opacity: 1,\n      duration: 0.5,\n      ease: 'elastic.out(1, 0.3)',\n      onComplete: () => gsap.to(line, {\n        opacity: 0,\n        duration: 0.5\n      })\n    });\n  }\n};\n_c = AnimateLines;\ngsap.fromTo(line, {\n  scale: 0,\n  // Ensure the rotation is applied as a CSS property\n  css: {\n    rotation: i * angleIncrement\n  },\n  transformOrigin: 'bottom center'\n}, {\n  scale: 1,\n  opacity: 1,\n  duration: 0.5,\n  ease: 'elastic.out(1, 0.3)',\n  onComplete: () => gsap.to(line, {\n    opacity: 0,\n    duration: 0.5\n  })\n});\nexport default AnimateLines;\nvar _c;\n$RefreshReg$(_c, \"AnimateLines\");","map":{"version":3,"names":["gsap","AnimateLines","containerSelector","container","document","querySelector","numberOfLines","angleIncrement","i","line","createElement","classList","add","appendChild","fromTo","scale","rotation","transformOrigin","opacity","duration","ease","onComplete","to","_c","css","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Home/AnimateLines.js"],"sourcesContent":["// animateLines.js\nimport { gsap } from 'gsap';\n\nexport const AnimateLines = (containerSelector) => {\n  const container = document.querySelector(containerSelector);\n  const numberOfLines = 8;\n  const angleIncrement = 360 / numberOfLines;\n\n  for (let i = 0; i < numberOfLines; i++) {\n    const line = document.createElement('div');\n    line.classList.add('line');\n    container.appendChild(line);\n    gsap.fromTo(line,\n      {\n        scale: 0,\n        rotation: i * angleIncrement,\n        transformOrigin: 'bottom center',\n      },\n      {\n        scale: 1,\n        opacity: 1,\n        duration: 0.5,\n        ease: 'elastic.out(1, 0.3)',\n        onComplete: () => gsap.to(line, { opacity: 0, duration: 0.5 })\n      }\n    );\n  }\n};\n\ngsap.fromTo(line, {\n    scale: 0,\n    // Ensure the rotation is applied as a CSS property\n    css: { rotation: i * angleIncrement },\n    transformOrigin: 'bottom center',\n  }, {\n    scale: 1,\n    opacity: 1,\n    duration: 0.5,\n    ease: 'elastic.out(1, 0.3)',\n    onComplete: () => gsap.to(line, { opacity: 0, duration: 0.5 })\n  });\n  \n\nexport default AnimateLines;"],"mappings":"AAAA;AACA,SAASA,IAAI,QAAQ,MAAM;AAE3B,OAAO,MAAMC,YAAY,GAAIC,iBAAiB,IAAK;EACjD,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAACH,iBAAiB,CAAC;EAC3D,MAAMI,aAAa,GAAG,CAAC;EACvB,MAAMC,cAAc,GAAG,GAAG,GAAGD,aAAa;EAE1C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;IACtC,MAAMC,IAAI,GAAGL,QAAQ,CAACM,aAAa,CAAC,KAAK,CAAC;IAC1CD,IAAI,CAACE,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC1BT,SAAS,CAACU,WAAW,CAACJ,IAAI,CAAC;IAC3BT,IAAI,CAACc,MAAM,CAACL,IAAI,EACd;MACEM,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAER,CAAC,GAAGD,cAAc;MAC5BU,eAAe,EAAE;IACnB,CAAC,EACD;MACEF,KAAK,EAAE,CAAC;MACRG,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,IAAI,EAAE,qBAAqB;MAC3BC,UAAU,EAAEA,CAAA,KAAMrB,IAAI,CAACsB,EAAE,CAACb,IAAI,EAAE;QAAES,OAAO,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAC/D,CACF,CAAC;EACH;AACF,CAAC;AAACI,EAAA,GAxBWtB,YAAY;AA0BzBD,IAAI,CAACc,MAAM,CAACL,IAAI,EAAE;EACdM,KAAK,EAAE,CAAC;EACR;EACAS,GAAG,EAAE;IAAER,QAAQ,EAAER,CAAC,GAAGD;EAAe,CAAC;EACrCU,eAAe,EAAE;AACnB,CAAC,EAAE;EACDF,KAAK,EAAE,CAAC;EACRG,OAAO,EAAE,CAAC;EACVC,QAAQ,EAAE,GAAG;EACbC,IAAI,EAAE,qBAAqB;EAC3BC,UAAU,EAAEA,CAAA,KAAMrB,IAAI,CAACsB,EAAE,CAACb,IAAI,EAAE;IAAES,OAAO,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAI,CAAC;AAC/D,CAAC,CAAC;AAGJ,eAAelB,YAAY;AAAC,IAAAsB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}