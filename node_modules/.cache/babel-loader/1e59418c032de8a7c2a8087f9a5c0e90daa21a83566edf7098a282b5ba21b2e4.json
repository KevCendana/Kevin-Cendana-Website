{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Slideshow/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Slideshow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = ({\n  slides\n}) => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const intervalRef = useRef(null);\n  const nextSlide = () => {\n    setCurrentSlide(prev => (prev + 1) % slides.length);\n  };\n  useEffect(() => {\n    intervalRef.current = setInterval(nextSlide, 3000);\n    return () => clearInterval(intervalRef.current);\n  }, [currentSlide, slides.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-stage\",\n      children: slides.map((slide, index) => {\n        var _slide$captions;\n        return /*#__PURE__*/_jsxDEV(\"figure\", {\n          className: `carousel-slide ${index === currentSlide ? 'active' : ''}`,\n          style: {\n            backgroundImage: `url(${slide.image})`\n          },\n          children: (_slide$captions = slide.captions) === null || _slide$captions === void 0 ? void 0 : _slide$captions.map((caption, captionIndex) => /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            style: {\n              backgroundColor: caption.style.backgroundColor,\n              color: caption.style.color\n            },\n            children: caption.text\n          }, captionIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"+JBUeoOl8jcS+D5CFlImpv79ZOs=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Slideshow","slides","_s","currentSlide","setCurrentSlide","intervalRef","nextSlide","prev","length","current","setInterval","clearInterval","className","children","map","slide","index","_slide$captions","style","backgroundImage","image","captions","caption","captionIndex","backgroundColor","color","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Slideshow/Slideshow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Slideshow.css';\n\nconst Slideshow = ({ slides }) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const intervalRef = useRef(null);\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  useEffect(() => {\n    intervalRef.current = setInterval(nextSlide, 3000);\n    return () => clearInterval(intervalRef.current);\n  }, [currentSlide, slides.length]);\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"carousel-stage\">\n        {slides.map((slide, index) => (\n          <figure \n            key={index}\n            className={`carousel-slide ${index === currentSlide ? 'active' : ''}`}\n            style={{ backgroundImage: `url(${slide.image})` }}\n          >\n            {slide.captions?.map((caption, captionIndex) => (\n              <figcaption key={captionIndex} style={{ backgroundColor: caption.style.backgroundColor, color: caption.style.color }}>\n                {caption.text}\n              </figcaption>\n            ))}\n          </figure>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Slideshow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMU,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBF,eAAe,CAAEG,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIN,MAAM,CAACO,MAAM,CAAC;EACvD,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdS,WAAW,CAACI,OAAO,GAAGC,WAAW,CAACJ,SAAS,EAAE,IAAI,CAAC;IAClD,OAAO,MAAMK,aAAa,CAACN,WAAW,CAACI,OAAO,CAAC;EACjD,CAAC,EAAE,CAACN,YAAY,EAAEF,MAAM,CAACO,MAAM,CAAC,CAAC;EAEjC,oBACET,OAAA;IAAKa,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBd,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BZ,MAAM,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK;QAAA,IAAAC,eAAA;QAAA,oBACvBlB,OAAA;UAEEa,SAAS,EAAG,kBAAiBI,KAAK,KAAKb,YAAY,GAAG,QAAQ,GAAG,EAAG,EAAE;UACtEe,KAAK,EAAE;YAAEC,eAAe,EAAG,OAAMJ,KAAK,CAACK,KAAM;UAAG,CAAE;UAAAP,QAAA,GAAAI,eAAA,GAEjDF,KAAK,CAACM,QAAQ,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBH,GAAG,CAAC,CAACQ,OAAO,EAAEC,YAAY,kBACzCxB,OAAA;YAA+BmB,KAAK,EAAE;cAAEM,eAAe,EAAEF,OAAO,CAACJ,KAAK,CAACM,eAAe;cAAEC,KAAK,EAAEH,OAAO,CAACJ,KAAK,CAACO;YAAM,CAAE;YAAAZ,QAAA,EAClHS,OAAO,CAACI;UAAI,GADEH,YAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEjB,CACb;QAAC,GARGd,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASJ,CAAC;MAAA,CACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAhCIF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}