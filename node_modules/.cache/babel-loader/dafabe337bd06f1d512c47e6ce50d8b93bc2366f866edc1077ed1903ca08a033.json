{"ast":null,"code":"// get cookie by name\nconst getCookie = name => {\n  const cookieName = name + '='; // define prefix\n  const cookieArray = document.cookie.split(';'); // split cookies\n\n  // loop through all cookies\n  for (let i = 0; i < cookieArray.length; i++) {\n    let cookie = cookieArray[i].trim();\n    if (cookie.indexOf(cookieName) === 0) return cookie.substring(cookieName.length); // return value if found\n  }\n\n  return ''; // return empty if not found\n};\n\n// Set cookie with name, value, and expiration\nconst setCookie = (name, value, days) => {\n  const date = new Date();\n  date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000); // Set expiration time\n  const expires = 'expires=' + date.toUTCString(); // Format expiration\n  document.cookie = name + '=' + value + ';' + expires + ';path=/'; // Set cookie\n};\n\nexport { getCookie, setCookie }; // Export functions","map":{"version":3,"names":["getCookie","name","cookieName","cookieArray","document","cookie","split","i","length","trim","indexOf","substring","setCookie","value","days","date","Date","setTime","getTime","expires","toUTCString"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/DarkModeToggle/CookieUtils.js"],"sourcesContent":["// get cookie by name\nconst getCookie = (name) => {\n    const cookieName = name + '=';                  // define prefix\n    const cookieArray = document.cookie.split(';'); // split cookies\n\n    // loop through all cookies\n    for (let i = 0; i < cookieArray.length; i++) {\n        let cookie = cookieArray[i].trim();                                              \n        if (cookie.indexOf(cookieName) === 0) return cookie.substring(cookieName.length); // return value if found\n    }\n    return ''; // return empty if not found\n};\n\n// Set cookie with name, value, and expiration\nconst setCookie = (name, value, days) => {\n    const date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000); // Set expiration time\n    const expires = 'expires=' + date.toUTCString(); // Format expiration\n    document.cookie = name + '=' + value + ';' + expires + ';path=/'; // Set cookie\n};\n\nexport { getCookie, setCookie }; // Export functions\n"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAIC,IAAI,IAAK;EACxB,MAAMC,UAAU,GAAGD,IAAI,GAAG,GAAG,CAAC,CAAkB;EAChD,MAAME,WAAW,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEhD;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,WAAW,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACzC,IAAIF,MAAM,GAAGF,WAAW,CAACI,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;IAClC,IAAIJ,MAAM,CAACK,OAAO,CAACR,UAAU,CAAC,KAAK,CAAC,EAAE,OAAOG,MAAM,CAACM,SAAS,CAACT,UAAU,CAACM,MAAM,CAAC,CAAC,CAAC;EACtF;;EACA,OAAO,EAAE,CAAC,CAAC;AACf,CAAC;;AAED;AACA,MAAMI,SAAS,GAAGA,CAACX,IAAI,EAAEY,KAAK,EAAEC,IAAI,KAAK;EACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,GAAGJ,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;EAC3D,MAAMK,OAAO,GAAG,UAAU,GAAGJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;EACjDhB,QAAQ,CAACC,MAAM,GAAGJ,IAAI,GAAG,GAAG,GAAGY,KAAK,GAAG,GAAG,GAAGM,OAAO,GAAG,SAAS,CAAC,CAAC;AACtE,CAAC;;AAED,SAASnB,SAAS,EAAEY,SAAS,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}