{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Slideshow/Slideshow.js\",\n  _s = $RefreshSig$();\n// Import necessary hooks and dependencies from React\nimport React, { useState, useEffect, useRef } from 'react';\n// Import the stylesheet for styling the slideshow\nimport './Slideshow.css';\n\n// Slideshow component definition. This component takes 'slides' as a prop.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = ({\n  slides\n}) => {\n  _s();\n  var _slide$captions;\n  // Reference for the interval to enable automatic slide change\n  const intervalRef = useRef(null);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [prevSlide, setPrevSlide] = useState(null);\n\n  // Updated function to go to the next slide\n  const nextSlide = () => {\n    setPrevSlide(currentSlide);\n    setCurrentSlide(prev => (prev + 1) % slides.length);\n  };\n\n  // Function to generate the style for each slide\n  // Function to generate the style for each slide\n  const getSlideStyle = (slide, index) => {\n    let backgroundImage = `url(${slide.image})`;\n\n    // Check if the slide is a GIF and it's the current slide\n    if (slide.image.endsWith('.gif') && index === currentSlide) {\n      const uniqueString = new Date().getTime();\n      backgroundImage = `url(${slide.image}?unique=${uniqueString})`;\n    }\n    return {\n      backgroundImage\n    };\n  };\n\n  // useEffect hook to set up and clean up the interval for auto slide changing\n  useEffect(() => {\n    // Set an interval for the slide change\n    intervalRef.current = setInterval(nextSlide, 3000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => clearInterval(intervalRef.current);\n  }, [currentSlide, nextSlide, slides.length]);\n\n  // Determine the index for the next and next-to-next slides\n  const nextSlideIndex = (currentSlide + 1) % slides.length;\n  const nextToNextSlideIndex = (currentSlide + 2) % slides.length;\n\n  // Render the slideshow component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: slides === null || slides === void 0 ? void 0 : slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `slide ${index === currentSlide ? 'active' : ''} ${index === prevSlide ? 'previous' : ''} ${index === nextSlideIndex ? 'next' : ''} ${index === nextToNextSlideIndex ? 'next-to-next' : ''}`,\n      style: getSlideStyle(slide, index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"caption-container\",\n    children: (_slide$captions = slide.captions) === null || _slide$captions === void 0 ? void 0 : _slide$captions.map((caption, captionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"caption\",\n      style: {\n        backgroundColor: caption.style.backgroundColor,\n        color: caption.style.color\n      },\n      children: caption.text\n    }, captionIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n// Export the Slideshow component for use in other parts of the application\n_s(Slideshow, \"eFSaGUeDtwR7z8COP3oDwgVfLmQ=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Slideshow","slides","_s","_slide$captions","intervalRef","currentSlide","setCurrentSlide","prevSlide","setPrevSlide","nextSlide","prev","length","getSlideStyle","slide","index","backgroundImage","image","endsWith","uniqueString","Date","getTime","current","setInterval","clearInterval","nextSlideIndex","nextToNextSlideIndex","className","children","map","style","fileName","_jsxFileName","lineNumber","columnNumber","captions","caption","captionIndex","backgroundColor","color","text","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Slideshow/Slideshow.js"],"sourcesContent":["// Import necessary hooks and dependencies from React\nimport React, { useState, useEffect, useRef } from 'react';\n// Import the stylesheet for styling the slideshow\nimport './Slideshow.css';\n\n// Slideshow component definition. This component takes 'slides' as a prop.\nconst Slideshow = ({ slides }) => {\n\n  // Reference for the interval to enable automatic slide change\n  const intervalRef = useRef(null);\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [prevSlide, setPrevSlide] = useState(null);\n\n  // Updated function to go to the next slide\n  const nextSlide = () => {\n    setPrevSlide(currentSlide);\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  // Function to generate the style for each slide\n// Function to generate the style for each slide\nconst getSlideStyle = (slide, index) => {\n  let backgroundImage = `url(${slide.image})`;\n\n  // Check if the slide is a GIF and it's the current slide\n  if (slide.image.endsWith('.gif') && index === currentSlide) {\n    const uniqueString = new Date().getTime();\n    backgroundImage = `url(${slide.image}?unique=${uniqueString})`;\n  }\n\n  return { backgroundImage };\n};\n\n\n  // useEffect hook to set up and clean up the interval for auto slide changing\n  useEffect(() => {\n    // Set an interval for the slide change\n    intervalRef.current = setInterval(nextSlide, 3000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => clearInterval(intervalRef.current);\n  }, [currentSlide, nextSlide, slides.length]);\n\n\n  // Determine the index for the next and next-to-next slides\n  const nextSlideIndex = (currentSlide + 1) % slides.length;\n  const nextToNextSlideIndex = (currentSlide + 2) % slides.length;\n\n\n  // Render the slideshow component\n  return (\n    <div className=\"slideshow\">\n      {slides?.map((slide, index) => (\n        <div\n          key={index}\n          className={`slide ${index === currentSlide ? 'active' : ''} ${index === prevSlide ? 'previous' : ''} ${index === nextSlideIndex ? 'next' : ''} ${index === nextToNextSlideIndex ? 'next-to-next' : ''}`}\n          style={getSlideStyle(slide, index)}\n        >\n          {/* Caption container and other contents */}\n        </div>\n      ))}\n    </div>\n  );\n  <div className=\"caption-container\">\n  {slide.captions?.map((caption, captionIndex) => (\n    <div \n      key={captionIndex}\n      className=\"caption\"\n      style={{ backgroundColor: caption.style.backgroundColor, color: caption.style.color }}\n    >\n      {caption.text}\n    </div>\n  ))}\n</div>\n};\n\n// Export the Slideshow component for use in other parts of the application\nexport default Slideshow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}