{"ast":null,"code":"// Function to get a cookie by its name\nconst getCookie = name => {\n  // Define the prefix for the cookie we are looking for\n  const cookieName = name + '=';\n  // Split the document's cookies into an array\n  const cookieArray = document.cookie.split(';');\n\n  // Iterate over the array to find our cookie\n  for (let i = 0; i < cookieArray.length; i++) {\n    let cookie = cookieArray[i];\n    // Remove any leading whitespace\n    while (cookie.charAt(0) === ' ') {\n      cookie = cookie.substring(1);\n    }\n    // If our cookie is found, return its value\n    if (cookie.indexOf(cookieName) === 0) {\n      return cookie.substring(cookieName.length, cookie.length);\n    }\n  }\n  // Return an empty string if cookie not found\n  return '';\n};\n\n// Function to set a cookie with a specified name, value, and expiration in days\nconst setCookie = (name, value, days) => {\n  // Create a date for when the cookie will expire\n  const date = new Date();\n  date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n  const expires = 'expires=' + date.toUTCString();\n  // Set the cookie\n  document.cookie = name + '=' + value + ';' + expires + ';path=/';\n};\nexport { getCookie, setCookie };","map":{"version":3,"names":["getCookie","name","cookieName","cookieArray","document","cookie","split","i","length","charAt","substring","indexOf","setCookie","value","days","date","Date","setTime","getTime","expires","toUTCString"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/DarkModeToggle/CookieUtils.js"],"sourcesContent":["// Function to get a cookie by its name\nconst getCookie = (name) => {\n    // Define the prefix for the cookie we are looking for\n    const cookieName = name + '=';\n    // Split the document's cookies into an array\n    const cookieArray = document.cookie.split(';');\n  \n    // Iterate over the array to find our cookie\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      // Remove any leading whitespace\n      while (cookie.charAt(0) === ' ') {\n        cookie = cookie.substring(1);\n      }\n      // If our cookie is found, return its value\n      if (cookie.indexOf(cookieName) === 0) {\n        return cookie.substring(cookieName.length, cookie.length);\n      }\n    }\n    // Return an empty string if cookie not found\n    return '';\n  };\n  \n  // Function to set a cookie with a specified name, value, and expiration in days\n  const setCookie = (name, value, days) => {\n    // Create a date for when the cookie will expire\n    const date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    const expires = 'expires=' + date.toUTCString();\n    // Set the cookie\n    document.cookie = name + '=' + value + ';' + expires + ';path=/';\n  };\n  \n  export { getCookie, setCookie };\n  "],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAIC,IAAI,IAAK;EACxB;EACA,MAAMC,UAAU,GAAGD,IAAI,GAAG,GAAG;EAC7B;EACA,MAAME,WAAW,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;;EAE9C;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,WAAW,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IAC3C,IAAIF,MAAM,GAAGF,WAAW,CAACI,CAAC,CAAC;IAC3B;IACA,OAAOF,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC/BJ,MAAM,GAAGA,MAAM,CAACK,SAAS,CAAC,CAAC,CAAC;IAC9B;IACA;IACA,IAAIL,MAAM,CAACM,OAAO,CAACT,UAAU,CAAC,KAAK,CAAC,EAAE;MACpC,OAAOG,MAAM,CAACK,SAAS,CAACR,UAAU,CAACM,MAAM,EAAEH,MAAM,CAACG,MAAM,CAAC;IAC3D;EACF;EACA;EACA,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMI,SAAS,GAAGA,CAACX,IAAI,EAAEY,KAAK,EAAEC,IAAI,KAAK;EACvC;EACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,GAAGJ,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EACzD,MAAMK,OAAO,GAAG,UAAU,GAAGJ,IAAI,CAACK,WAAW,CAAC,CAAC;EAC/C;EACAhB,QAAQ,CAACC,MAAM,GAAGJ,IAAI,GAAG,GAAG,GAAGY,KAAK,GAAG,GAAG,GAAGM,OAAO,GAAG,SAAS;AAClE,CAAC;AAED,SAASnB,SAAS,EAAEY,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}