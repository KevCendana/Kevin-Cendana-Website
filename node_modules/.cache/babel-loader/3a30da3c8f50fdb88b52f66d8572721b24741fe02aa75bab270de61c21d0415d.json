{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Slideshow/Slideshow.js\",\n  _s = $RefreshSig$();\n// Import necessary hooks and dependencies from React\nimport React, { useState, useEffect, useRef } from 'react';\n// Import the stylesheet for styling the slideshow\nimport './Slideshow.css';\n\n// Slideshow component definition. This component takes 'slides' as a prop.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = ({\n  slides,\n  secondaryCaption\n}) => {\n  _s();\n  // State to keep track of the current slide\n  const [currentSlide, setCurrentSlide] = useState(0);\n  // State to track the previous slide for transition effects\n  const [prevSlide, setPrevSlide] = useState(null);\n  // Reference for the interval to enable automatic slide change\n  const intervalRef = useRef(null);\n\n  // Function to go to the next slide\n  const nextSlide = () => {\n    // Update the previous slide before changing the current slide\n    setPrevSlide(currentSlide);\n    // Change to the next slide, wrapping around if at the end\n    setCurrentSlide(prev => (prev + 1) % slides.length);\n  };\n\n  // Function to generate the style for each slide\n  const getSlideStyle = (slide, index) => {\n    // Default background image\n    let backgroundImage = `url(${slide.image})`;\n\n    // If the slide is a GIF and it's the current slide\n    // Add a unique query string to reset the GIF animation\n    if (slide.isGif && index === currentSlide) {\n      const uniqueString = new Date().getTime();\n      backgroundImage = `url(${slide.image}?unique=${uniqueString})`;\n    }\n    return {\n      backgroundImage\n    };\n  };\n\n  // useEffect hook to set up and clean up the interval for auto slide changing\n  useEffect(() => {\n    // Set an interval for the slide change\n    intervalRef.current = setInterval(nextSlide, 3000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => clearInterval(intervalRef.current);\n  }, [currentSlide, slides.length]);\n\n  // Render the slideshow component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `slide ${index === currentSlide ? 'active' : ''} ${index === prevSlide ? 'previous' : ''}`,\n      style: {\n        backgroundImage: `url(${slide.image})`\n      },\n      children: slide.captions.map((caption, captionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caption\",\n        style: caption.style,\n        children: caption.text\n      }, captionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the Slideshow component for use in other parts of the application\n_s(Slideshow, \"xnx69Wky6KdO35tNfukzd3ThiOM=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Slideshow","slides","secondaryCaption","_s","currentSlide","setCurrentSlide","prevSlide","setPrevSlide","intervalRef","nextSlide","prev","length","getSlideStyle","slide","index","backgroundImage","image","isGif","uniqueString","Date","getTime","current","setInterval","clearInterval","className","children","map","style","captions","caption","captionIndex","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Slideshow/Slideshow.js"],"sourcesContent":["// Import necessary hooks and dependencies from React\nimport React, { useState, useEffect, useRef } from 'react';\n// Import the stylesheet for styling the slideshow\nimport './Slideshow.css';\n\n// Slideshow component definition. This component takes 'slides' as a prop.\nconst Slideshow = ({ slides, secondaryCaption }) => {\n  // State to keep track of the current slide\n  const [currentSlide, setCurrentSlide] = useState(0);\n  // State to track the previous slide for transition effects\n  const [prevSlide, setPrevSlide] = useState(null);\n  // Reference for the interval to enable automatic slide change\n  const intervalRef = useRef(null);\n\n  // Function to go to the next slide\n  const nextSlide = () => {\n    // Update the previous slide before changing the current slide\n    setPrevSlide(currentSlide);\n    // Change to the next slide, wrapping around if at the end\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  // Function to generate the style for each slide\n  const getSlideStyle = (slide, index) => {\n    // Default background image\n    let backgroundImage = `url(${slide.image})`;\n\n    // If the slide is a GIF and it's the current slide\n    // Add a unique query string to reset the GIF animation\n    if (slide.isGif && index === currentSlide) {\n      const uniqueString = new Date().getTime();\n      backgroundImage = `url(${slide.image}?unique=${uniqueString})`;\n    }\n\n    return { backgroundImage };\n  };\n\n  // useEffect hook to set up and clean up the interval for auto slide changing\n  useEffect(() => {\n    // Set an interval for the slide change\n    intervalRef.current = setInterval(nextSlide, 3000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => clearInterval(intervalRef.current);\n  }, [currentSlide, slides.length]);\n\n  // Render the slideshow component\n  return (\n    <div className=\"slideshow\">\n      {slides.map((slide, index) => (\n        <div\n          key={index}\n          className={`slide ${index === currentSlide ? 'active' : ''} ${index === prevSlide ? 'previous' : ''}`}\n          style={{ backgroundImage: `url(${slide.image})` }}\n        >\n          {slide.captions.map((caption, captionIndex) => (\n            <div \n              key={captionIndex}\n              className=\"caption\"\n              style={caption.style}\n            >\n              {caption.text}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n\n};\n\n// Export the Slideshow component for use in other parts of the application\nexport default Slideshow;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D;AACA,OAAO,iBAAiB;;AAExB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAClD;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnD;EACA,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD;EACA,MAAMa,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAF,YAAY,CAACH,YAAY,CAAC;IAC1B;IACAC,eAAe,CAAEK,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIT,MAAM,CAACU,MAAM,CAAC;EACvD,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACtC;IACA,IAAIC,eAAe,GAAI,OAAMF,KAAK,CAACG,KAAM,GAAE;;IAE3C;IACA;IACA,IAAIH,KAAK,CAACI,KAAK,IAAIH,KAAK,KAAKV,YAAY,EAAE;MACzC,MAAMc,YAAY,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACzCL,eAAe,GAAI,OAAMF,KAAK,CAACG,KAAM,WAAUE,YAAa,GAAE;IAChE;IAEA,OAAO;MAAEH;IAAgB,CAAC;EAC5B,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACd;IACAY,WAAW,CAACa,OAAO,GAAGC,WAAW,CAACb,SAAS,EAAE,IAAI,CAAC;;IAElD;IACA,OAAO,MAAMc,aAAa,CAACf,WAAW,CAACa,OAAO,CAAC;EACjD,CAAC,EAAE,CAACjB,YAAY,EAAEH,MAAM,CAACU,MAAM,CAAC,CAAC;;EAEjC;EACA,oBACEZ,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBxB,MAAM,CAACyB,GAAG,CAAC,CAACb,KAAK,EAAEC,KAAK,kBACvBf,OAAA;MAEEyB,SAAS,EAAG,SAAQV,KAAK,KAAKV,YAAY,GAAG,QAAQ,GAAG,EAAG,IAAGU,KAAK,KAAKR,SAAS,GAAG,UAAU,GAAG,EAAG,EAAE;MACtGqB,KAAK,EAAE;QAAEZ,eAAe,EAAG,OAAMF,KAAK,CAACG,KAAM;MAAG,CAAE;MAAAS,QAAA,EAEjDZ,KAAK,CAACe,QAAQ,CAACF,GAAG,CAAC,CAACG,OAAO,EAAEC,YAAY,kBACxC/B,OAAA;QAEEyB,SAAS,EAAC,SAAS;QACnBG,KAAK,EAAEE,OAAO,CAACF,KAAM;QAAAF,QAAA,EAEpBI,OAAO,CAACE;MAAI,GAJRD,YAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACN;IAAC,GAZGrB,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGV,CAAC;;AAED;AAAAhC,EAAA,CAjEMH,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAkEf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}