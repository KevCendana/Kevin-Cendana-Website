{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Home/Home.js\",\n  _s = $RefreshSig$();\n//--------------------------------------------------------------------------------------//\n//                                         Home                                         //\n//--------------------------------------------------------------------------------------//\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport '../normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // State to keep track of the current index in the titles array\n  const [currentIndex, setCurrentIndex] = useState(0);\n  // Titles you want to rotate through\n  const titles = [\"Senior Software Engineer\", \"Web Developer\", \"Tech Enthusiast\", \"Creative Coder\"];\n  // State to control the animation\n  const [animate, setAnimate] = useState(true);\n\n  // This effect runs when the component mounts and sets up an interval\n  useEffect(() => {\n    const changeTitle = () => {\n      // Turn off the animation\n      setAnimate(false);\n\n      // After a short delay, change the title and turn the animation on\n      setTimeout(() => {\n        setCurrentIndex(prevIndex => (prevIndex + 1) % titles.length);\n        setAnimate(true);\n      }, 250); // Short delay to ensure the title disappears before the next one appears\n    };\n\n    // Initial call to start the rotation\n    changeTitle();\n\n    // Set up an interval to change the title every 3.25 seconds (includes delay)\n    const intervalId = setInterval(changeTitle, 3250);\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    id: \"home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"rt/olpM0n/KesaIiYdcdVrLNSrE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","currentIndex","setCurrentIndex","titles","animate","setAnimate","changeTitle","setTimeout","prevIndex","length","intervalId","setInterval","clearInterval","className","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Home/Home.js"],"sourcesContent":["//--------------------------------------------------------------------------------------//\n//                                         Home                                         //\n//--------------------------------------------------------------------------------------//\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport '../normalize.css';\n\nfunction Home() {\n    // State to keep track of the current index in the titles array\n    const [currentIndex, setCurrentIndex] = useState(0);\n    // Titles you want to rotate through\n    const titles = [\"Senior Software Engineer\", \"Web Developer\", \"Tech Enthusiast\", \"Creative Coder\"];\n    // State to control the animation\n    const [animate, setAnimate] = useState(true);\n\n    // This effect runs when the component mounts and sets up an interval\n    useEffect(() => {\n        const changeTitle = () => {\n            // Turn off the animation\n            setAnimate(false);\n\n            // After a short delay, change the title and turn the animation on\n            setTimeout(() => {\n                setCurrentIndex(prevIndex => (prevIndex + 1) % titles.length);\n                setAnimate(true);\n            }, 250); // Short delay to ensure the title disappears before the next one appears\n        };\n\n        // Initial call to start the rotation\n        changeTitle();\n\n        // Set up an interval to change the title every 3.25 seconds (includes delay)\n        const intervalId = setInterval(changeTitle, 3250);\n\n        // Clear the interval when the component unmounts\n        return () => clearInterval(intervalId);\n    }, []);\n\n    return (\n        <div className=\"home\" id=\"home\">\n            {/* Your existing JSX code */}\n        </div>\n    );\n}\n\nexport default Home;\n"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnD;EACA,MAAMQ,MAAM,GAAG,CAAC,0BAA0B,EAAE,eAAe,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;EACjG;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMU,WAAW,GAAGA,CAAA,KAAM;MACtB;MACAD,UAAU,CAAC,KAAK,CAAC;;MAEjB;MACAE,UAAU,CAAC,MAAM;QACbL,eAAe,CAACM,SAAS,IAAI,CAACA,SAAS,GAAG,CAAC,IAAIL,MAAM,CAACM,MAAM,CAAC;QAC7DJ,UAAU,CAAC,IAAI,CAAC;MACpB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACb,CAAC;;IAED;IACAC,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMI,UAAU,GAAGC,WAAW,CAACL,WAAW,EAAE,IAAI,CAAC;;IAEjD;IACA,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAKe,SAAS,EAAC,MAAM;IAACC,EAAE,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEd;AAAClB,EAAA,CApCQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}