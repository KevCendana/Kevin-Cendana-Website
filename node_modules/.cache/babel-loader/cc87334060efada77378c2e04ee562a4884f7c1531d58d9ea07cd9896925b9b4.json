{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Projects/Carousel.tsx\",\n  _s = $RefreshSig$();\n//--------------------------------------------------------------------------------------//\n//                                     Carousel.tsx                                     //\n//--------------------------------------------------------------------------------------//\n\n// Credit: Chunk of code from React Round Carousel by scriptex: https://github.com/scriptex/react-round-carousel\n\nimport TouchSweep from 'touchsweep'; // For touch gestures.\nimport { v4 as uuid } from 'uuid'; // To generate unique IDs.\nimport React, {\n// FC is shorthand for FunctionComponent, a type of React component.\nuseRef,\n// To reference DOM elements.\nuseMemo,\n// To memorize values.\nuseState,\n// To manage state in the component.\nuseEffect,\n// To perform side effects in the component.\nforwardRef,\n// To pass refs down to child components.\nuseCallback // To memorize functions.\n,\n// Type for CSS properties in JSX.\nuseImperativeHandle // To customize the instance value exposed to parent components when using refs.\n} from 'react';\nimport './Carousel.css';\n\n// Type definitions for different props and items used in the carousel.\n\n// Various props to customize the carousel, like items, width, controls, etc.\n\n// Methods available on the carousel's ref object.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// The main Carousel component\nexport const Carousel = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  items,\n  itemWidth = 250,\n  showControls = true,\n  slideOnClick = false,\n  classNamePrefix = 'carousel',\n  prevButtonContent = 'Previous',\n  nextButtonContent = 'Next'\n}, CarouselRef) => {\n  _s();\n  const data = useMemo(() => items.map(item => ({\n    ...item,\n    ...(item.id ? {} : {\n      id: uuid()\n    })\n  })), [items]);\n\n  // Padding adjustment\n  // Change to add more space between slides (combo w/ angle)\n  const padding = 0;\n\n  // Angle adjustment for previous and next slides \n  // Higher = Tilt further away from center\n  const additionalAngle = -3;\n  const [isGoingForward, setIsGoingForward] = useState(true);\n  const len = useMemo(() => data.length, [data.length]);\n  const theta = useMemo(() => 360 / len, [len]);\n  const radius = useMemo(() => Math.round((itemWidth + padding) / 2 / Math.tan(Math.PI / len)), [itemWidth, len, padding]);\n  const ref = useRef(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const getSlideStyle = useCallback((index, goingForward = isGoingForward) => {\n    console.log(\"Carousel.tsx: getSlideStyle() called: isGoingForward: \", isGoingForward, \", selectedIndex: \", selectedIndex, \", index: \", index, \", len: \", len, \", theta: \", theta, \", radius: \", radius, \", goingForward: \", goingForward);\n    const style = {};\n    if (index < len) {\n      let cellAngle;\n      if (!goingForward && selectedIndex === 0 && index === len - 1) {\n        console.log(\"Carousel.tsx: getSlideStyle() called, special case for wrapping backward from the first to the last slide\");\n        // Special case for wrapping backward from the first to the last slide\n        cellAngle = theta * index; // This should be adjusted based on your specific carousel structure\n      } else {\n        cellAngle = theta * index;\n      }\n      const isCurrentSlide = index === selectedIndex;\n      style.opacity = isCurrentSlide ? 1 : 0.9; // Opacity setting\n      style.transform = `rotateY(${cellAngle}deg) translateZ(${radius}px)`;\n    } else {\n      style.opacity = 0;\n      style.transform = 'none';\n    }\n    return style;\n  }, [len, radius, theta, selectedIndex, isGoingForward]);\n  const getItemStyle = useCallback(() => {\n    console.log(\"Carousel.tsx: getItemStyle() called\");\n    const angle = theta * selectedIndex * -1;\n    return {\n      transform: `translateZ(${-1 * radius}px) rotateY(${angle}deg)`\n    };\n  }, [radius, selectedIndex, theta]);\n  const getClassName = useCallback(parts => Array.isArray(parts) ? parts.map(part => `${classNamePrefix}${part}`).join(' ') : `${classNamePrefix}${parts}`, [classNamePrefix]);\n  const prev = useCallback(() => {\n    const isWrapping = selectedIndex - 1 < 0;\n    const prevIndex = isWrapping ? data.length - 1 : selectedIndex - 1;\n    setSelectedIndex(prevIndex);\n    if (isWrapping) {\n      setIsGoingForward(false);\n    } else {\n      setIsGoingForward(true);\n    }\n  }, [selectedIndex, data.length]);\n  const next = useCallback(() => {\n    const isWrapping = selectedIndex === data.length - 1;\n    const nextIndex = isWrapping ? 0 : selectedIndex + 1;\n    setSelectedIndex(nextIndex);\n    if (isWrapping) {\n      setIsGoingForward(false);\n    } else {\n      setIsGoingForward(true);\n    }\n  }, [selectedIndex, data.length]);\n  useEffect(() => {\n    console.log(\"Carousel.tsx: useEffect() called\");\n    const area = ref === null || ref === void 0 ? void 0 : ref.current;\n    const touchsweep = new TouchSweep(area !== null && area !== void 0 ? area : undefined);\n    area === null || area === void 0 ? void 0 : area.addEventListener('swipeleft', next);\n    area === null || area === void 0 ? void 0 : area.addEventListener('swiperight', prev);\n    return () => {\n      touchsweep.unbind();\n      area === null || area === void 0 ? void 0 : area.removeEventListener('swipeleft', next);\n      area === null || area === void 0 ? void 0 : area.removeEventListener('swiperight', prev);\n    };\n  });\n  useImperativeHandle(CarouselRef, () => ({\n    next,\n    prev,\n    getItems: () => data,\n    getSelectedIndex: () => {\n      console.log(\"getSelectedIndex called, current index: \", selectedIndex);\n      return selectedIndex;\n    },\n    setSelectedIndex: index => {\n      console.log(\"setSelectedIndex called, setting index: \", index);\n      setSelectedIndex(index);\n    }\n  })\n\n  //[selectedIndex, data]\n  );\n\n  // Main code\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getClassName(''),\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getClassName('__container'),\n        style: getItemStyle(),\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: getSlideStyle(index),\n          onClick: () => {\n            if (item.onClick) item.onClick();\n            if (slideOnClick) setSelectedIndex(index);\n          },\n          className: getClassName('__slide'),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image,\n            alt: item.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: getClassName('__slide-overlay'),\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 10\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }, this), showControls && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getClassName('__controls'),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: getClassName(['__control', '__control--prev']),\n        onClick: prev,\n        children: prevButtonContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: getClassName(['__control', '__control--next']),\n        onClick: next,\n        children: nextButtonContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}, \"DjGxe5HS0AlykzwXwvUpOn5oIWc=\")), \"DjGxe5HS0AlykzwXwvUpOn5oIWc=\");\n_c2 = Carousel;\nexport default Carousel;\nvar _c, _c2;\n$RefreshReg$(_c, \"Carousel$forwardRef\");\n$RefreshReg$(_c2, \"Carousel\");","map":{"version":3,"names":["TouchSweep","v4","uuid","React","useRef","useMemo","useState","useEffect","forwardRef","useCallback","useImperativeHandle","jsxDEV","_jsxDEV","Fragment","_Fragment","Carousel","_s","_c","items","itemWidth","showControls","slideOnClick","classNamePrefix","prevButtonContent","nextButtonContent","CarouselRef","data","map","item","id","padding","additionalAngle","isGoingForward","setIsGoingForward","len","length","theta","radius","Math","round","tan","PI","ref","selectedIndex","setSelectedIndex","getSlideStyle","index","goingForward","console","log","style","cellAngle","isCurrentSlide","opacity","transform","getItemStyle","angle","getClassName","parts","Array","isArray","part","join","prev","isWrapping","prevIndex","next","nextIndex","area","current","touchsweep","undefined","addEventListener","unbind","removeEventListener","getItems","getSelectedIndex","children","className","onClick","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","content","_c2","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Projects/Carousel.tsx"],"sourcesContent":["//--------------------------------------------------------------------------------------//\n//                                     Carousel.tsx                                     //\n//--------------------------------------------------------------------------------------//\n\n// Credit: Chunk of code from React Round Carousel by scriptex: https://github.com/scriptex/react-round-carousel\n\n\nimport TouchSweep from 'touchsweep'; // For touch gestures.\nimport { v4 as uuid } from 'uuid';  // To generate unique IDs.\nimport React, {\n  FC,                  // FC is shorthand for FunctionComponent, a type of React component.\n  useRef,              // To reference DOM elements.\n  useMemo,             // To memorize values.\n  useState,            // To manage state in the component.\n  useEffect,           // To perform side effects in the component.\n  forwardRef,          // To pass refs down to child components.\n  useCallback,         // To memorize functions.\n  CSSProperties,       // Type for CSS properties in JSX.\n  useImperativeHandle  // To customize the instance value exposed to parent components when using refs.\n} from 'react';\nimport './Carousel.css';\n\n// Type definitions for different props and items used in the carousel.\nexport type CarouselItem = Readonly<{\n    alt?: string; // Optional alt text for images.\n    image: string; // URL of the image.\n    content: React.ReactNode; // Content to display, can be any React node.\n    onClick?: () => void; // Optional click handler function.\n}>;\n\n\nexport type DecoratedCarouselItem = CarouselItem & Readonly<{ id: string }>;\n\n// Various props to customize the carousel, like items, width, controls, etc.\nexport type CarouselProps = Readonly<{\n\tref?: React.ForwardedRef<CarouselRef>;\n\titems: CarouselItem[];\n\titemWidth?: number;\n\tshowControls?: boolean;\n\tslideOnClick?: boolean;\n\tclassNamePrefix?: string;\n\tnextButtonContent?: string | React.ReactNode;\n\tprevButtonContent?: string | React.ReactNode;\n}>;\n\n// Methods available on the carousel's ref object.\nexport type CarouselRef = Readonly<{\n\tnext: () => void;\n\tprev: () => void;\n\tgetItems: () => DecoratedCarouselItem[];\n\tgetSelectedIndex: () => number;\n\tsetSelectedIndex: (index: number) => void;\n}>;\n\n// The main Carousel component\nexport const Carousel: FC<CarouselProps> = forwardRef(\n\t(\n\t\t{\n\t\t\titems,\n\t\t\titemWidth = 250,\n\t\t\tshowControls = true,\n\t\t\tslideOnClick = false,\n\t\t\tclassNamePrefix = 'carousel',\n\t\t\tprevButtonContent = 'Previous',\n\t\t\tnextButtonContent = 'Next'\n\t\t}: CarouselProps,\n\t\tCarouselRef\n\t) => {\n\t\tconst data: DecoratedCarouselItem[] = useMemo(\n\t\t\t() =>\n\t\t\t\titems.map(item => ({\n\t\t\t\t\t...item,\n\t\t\t\t\t...((item as unknown as DecoratedCarouselItem).id\n\t\t\t\t\t\t? ({} as unknown as DecoratedCarouselItem)\n\t\t\t\t\t\t: { id: uuid() })\n\t\t\t\t})),\n\t\t\t[items]\n\t\t);\n\n\n        // Padding adjustment\n        // Change to add more space between slides (combo w/ angle)\n        const padding = 0;\n\n        // Angle adjustment for previous and next slides \n        // Higher = Tilt further away from center\n        const additionalAngle = -3; \n\n        const [isGoingForward, setIsGoingForward] = useState(true);\n\t\tconst len = useMemo(() => data.length, [data.length]);\n\t\tconst theta = useMemo(() => 360 / len, [len]);\n        const radius = useMemo(\n            () => Math.round((itemWidth + padding) / 2 / Math.tan(Math.PI / len)),\n            [itemWidth, len, padding] \n        );\n        \n\n\t\tconst ref = useRef<HTMLDivElement>(null);\n\t\tconst [selectedIndex, setSelectedIndex] = useState(0);\n\n        const getSlideStyle = useCallback(\n            (index: number, goingForward = isGoingForward): CSSProperties => {\n                console.log(\"Carousel.tsx: getSlideStyle() called: isGoingForward: \", isGoingForward, \", selectedIndex: \", selectedIndex, \", index: \", index, \", len: \", len, \", theta: \", theta, \", radius: \", radius, \", goingForward: \", goingForward);\n                const style: CSSProperties = {};\n        \n                if (index < len) {\n                    let cellAngle;\n        \n                    if (!goingForward && selectedIndex === 0 && index === len - 1) {\n                        console.log(\"Carousel.tsx: getSlideStyle() called, special case for wrapping backward from the first to the last slide\");\n                        // Special case for wrapping backward from the first to the last slide\n                        cellAngle = theta*index; // This should be adjusted based on your specific carousel structure\n                    } else {\n                        cellAngle = theta * index;\n                    }\n        \n                    const isCurrentSlide = index === selectedIndex;\n                    style.opacity = isCurrentSlide ? 1 : 0.9; // Opacity setting\n                    style.transform = `rotateY(${cellAngle}deg) translateZ(${radius}px)`;\n                } else {\n                    style.opacity = 0;\n                    style.transform = 'none';\n                }\n        \n                return style;\n            },\n            [len, radius, theta, selectedIndex, isGoingForward]\n        );\n        \n        \n        \n\n\t\tconst getItemStyle = useCallback((): CSSProperties => {\n        console.log(\"Carousel.tsx: getItemStyle() called\");\n\t\t\tconst angle = theta * selectedIndex * -1;\n\n\t\t\treturn {\n\t\t\t\ttransform: `translateZ(${-1 * radius}px) rotateY(${angle}deg)`\n\t\t\t};\n\t\t}, [radius, selectedIndex, theta]);\n\n\t\tconst getClassName = useCallback(\n\t\t\t(parts: string | string[]) =>\n\t\t\t\tArray.isArray(parts)\n\t\t\t\t\t? parts\n\t\t\t\t\t\t\t.map((part: string) => `${classNamePrefix}${part}`)\n\t\t\t\t\t\t\t.join(' ')\n\t\t\t\t\t: `${classNamePrefix}${parts}`,\n\t\t\t[classNamePrefix]\n\t\t);\n\n        const prev = useCallback(() => {\n            const isWrapping = selectedIndex - 1 < 0;\n            const prevIndex = isWrapping ? data.length - 1 : selectedIndex - 1;\n        \n            setSelectedIndex(prevIndex);\n        \n            if (isWrapping) {\n                setIsGoingForward(false);\n            } else {\n                setIsGoingForward(true);\n            }\n        }, [selectedIndex, data.length]);\n        \n        const next = useCallback(() => {\n            const isWrapping = selectedIndex === data.length - 1;\n            const nextIndex = isWrapping ? 0 : selectedIndex + 1;\n        \n            setSelectedIndex(nextIndex);\n        \n            if (isWrapping) {\n                setIsGoingForward(false);\n            } else {\n                setIsGoingForward(true);\n            }\n        }, [selectedIndex, data.length]);\n        \n\n\t\tuseEffect(() => {\n            console.log(\"Carousel.tsx: useEffect() called\");\n\t\t\tconst area = ref?.current;\n\t\t\tconst touchsweep = new TouchSweep(area ?? undefined);\n\n\t\t\tarea?.addEventListener('swipeleft', next);\n\t\t\tarea?.addEventListener('swiperight', prev);\n\n\t\t\treturn () => {\n\t\t\t\ttouchsweep.unbind();\n\n\t\t\t\tarea?.removeEventListener('swipeleft', next);\n\t\t\t\tarea?.removeEventListener('swiperight', prev);\n\t\t\t};\n\t\t});\n\n\t\tuseImperativeHandle(\n\t\t\tCarouselRef,\n\t\t\t(): CarouselRef => ({\n\t\t\t\tnext,\n\t\t\t\tprev,\n\t\t\t\tgetItems: () => data,\n                getSelectedIndex: () => {\n                    console.log(\"getSelectedIndex called, current index: \", selectedIndex);\n                    return selectedIndex;\n                  },\n                  setSelectedIndex: (index: number) => {\n                    console.log(\"setSelectedIndex called, setting index: \", index);\n                    setSelectedIndex(index);\n                  }\n                \n\t\t\t}),\n            \n            //[selectedIndex, data]\n\t\t);\n        \n        // Main code\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={getClassName('')} ref={ref}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={getClassName('__container')}\n\t\t\t\t\t\tstyle={getItemStyle()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{data.map(\n\t\t\t\t\t\t\t(item: DecoratedCarouselItem, index: number) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\tstyle={getSlideStyle(index)}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tif (item.onClick) item.onClick();\n\n\t\t\t\t\t\t\t\t\t\tif (slideOnClick)\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedIndex(index);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={getClassName('__slide')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img src={item.image} alt={item.alt} />\n\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={getClassName(\n\t\t\t\t\t\t\t\t\t\t\t'__slide-overlay'\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{item.content}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{showControls && (\n\t\t\t\t\t<div className={getClassName('__controls')}>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={getClassName([\n\t\t\t\t\t\t\t\t'__control',\n\t\t\t\t\t\t\t\t'__control--prev'\n\t\t\t\t\t\t\t])}\n\t\t\t\t\t\t\tonClick={prev}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{prevButtonContent}\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={getClassName([\n\t\t\t\t\t\t\t\t'__control',\n\t\t\t\t\t\t\t\t'__control--next'\n\t\t\t\t\t\t\t])}\n\t\t\t\t\t\t\tonClick={next}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{nextButtonContent}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n);\n\nexport default Carousel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}