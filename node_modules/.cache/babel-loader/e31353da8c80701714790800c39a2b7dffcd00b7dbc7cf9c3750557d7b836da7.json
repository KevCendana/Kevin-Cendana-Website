{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Slideshow/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Slideshow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = ({\n  slides\n}) => {\n  _s();\n  // State to keep track of which slide is currently shown\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // References to slideshow and interval for cleanup\n  const intervalRef = useRef(null);\n\n  // Function to go to the next slide\n  const nextSlide = () => {\n    setCurrentSlide(prev => (prev + 1) % slides.length);\n  };\n\n  // Function to reset the interval for auto-changing slides\n  const resetInterval = () => {\n    clearInterval(intervalRef.current); // Clears any existing interval\n    intervalRef.current = setInterval(nextSlide, 3000); // Sets up a new interval\n  };\n\n  // useEffect hook to set up and clean up the interval\n  useEffect(() => {\n    resetInterval(); // Set the interval when the component mounts\n    return () => clearInterval(intervalRef.current); // Clear the interval when the component unmounts\n  }, [slides.length]); // Reset interval if the number of slides changes\n\n  // Function to handle the end of a drag\n  const handleDragEnd = () => {\n    resetInterval(); // Restart the interval after user interaction\n  };\n\n  // Render the slideshow component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    onMouseUp: handleDragEnd // End the drag process\n    ,\n    onMouseLeave: handleDragEnd // End the drag process when the mouse leaves the slideshow\n    ,\n    children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `slide ${index === currentSlide ? 'active' : ''}`,\n      style: {\n        backgroundImage: `url(${slide.image})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caption\",\n        children: slide.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"+JBUeoOl8jcS+D5CFlImpv79ZOs=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Slideshow","slides","_s","currentSlide","setCurrentSlide","intervalRef","nextSlide","prev","length","resetInterval","clearInterval","current","setInterval","handleDragEnd","className","onMouseUp","onMouseLeave","children","map","slide","index","style","backgroundImage","image","caption","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Slideshow/Slideshow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Slideshow.css';\n\nconst Slideshow = ({ slides }) => {\n  // State to keep track of which slide is currently shown\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // References to slideshow and interval for cleanup\n  const intervalRef = useRef(null);\n\n  // Function to go to the next slide\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  // Function to reset the interval for auto-changing slides\n  const resetInterval = () => {\n    clearInterval(intervalRef.current); // Clears any existing interval\n    intervalRef.current = setInterval(nextSlide, 3000); // Sets up a new interval\n  };\n\n  // useEffect hook to set up and clean up the interval\n  useEffect(() => {\n    resetInterval(); // Set the interval when the component mounts\n    return () => clearInterval(intervalRef.current); // Clear the interval when the component unmounts\n  }, [slides.length]); // Reset interval if the number of slides changes\n\n  // Function to handle the end of a drag\n  const handleDragEnd = () => {\n    resetInterval(); // Restart the interval after user interaction\n  };\n\n  // Render the slideshow component\n  return (\n    <div\n      className=\"slideshow\"\n      onMouseUp={handleDragEnd} // End the drag process\n      onMouseLeave={handleDragEnd} // End the drag process when the mouse leaves the slideshow\n    >\n      {slides.map((slide, index) => (\n        <div\n          key={index}\n          className={`slide ${index === currentSlide ? 'active' : ''}`}\n          style={{ backgroundImage: `url(${slide.image})` }}\n        >\n          <div className=\"caption\">{slide.caption}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Slideshow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMU,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBF,eAAe,CAAEG,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIN,MAAM,CAACO,MAAM,CAAC;EACvD,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BC,aAAa,CAACL,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC;IACpCN,WAAW,CAACM,OAAO,GAAGC,WAAW,CAACN,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;EACtD,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACda,aAAa,CAAC,CAAC,CAAC,CAAC;IACjB,OAAO,MAAMC,aAAa,CAACL,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC;EACnD,CAAC,EAAE,CAACV,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC,CAAC;;EAErB;EACA,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BJ,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;;EAED;EACA,oBACEV,OAAA;IACEe,SAAS,EAAC,WAAW;IACrBC,SAAS,EAAEF,aAAc,CAAC;IAAA;IAC1BG,YAAY,EAAEH,aAAc,CAAC;IAAA;IAAAI,QAAA,EAE5BhB,MAAM,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBrB,OAAA;MAEEe,SAAS,EAAG,SAAQM,KAAK,KAAKjB,YAAY,GAAG,QAAQ,GAAG,EAAG,EAAE;MAC7DkB,KAAK,EAAE;QAAEC,eAAe,EAAG,OAAMH,KAAK,CAACI,KAAM;MAAG,CAAE;MAAAN,QAAA,eAElDlB,OAAA;QAAKe,SAAS,EAAC,SAAS;QAAAG,QAAA,EAAEE,KAAK,CAACK;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,GAJzCR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA/CIF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}