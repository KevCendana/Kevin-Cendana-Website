{"ast":null,"code":"//--------------------------------------------------------------------------------------//\n//                                Typing Dots Animation                                 //\n//--------------------------------------------------------------------------------------//\n\nfunction TypingDots() {\n  console.log(\"showTypingAnimation() called\");\n  if (homeContent.style.display !== 'block') {\n    return; // Exit the function if homeContent is not visible\n  }\n  // let timer1, timer2;\n  const allSpeechBubblesWrapper = document.getElementById('allSpeechBubblesWrapper');\n  const firstMessageDelay = 1200; // 1000 = 1 second\n\n  document.querySelector(\".allSpeechBubblesWrapper\");\n\n  // Clear any existing timers if they exist\n  console.log(\"showTypingAnimation(): clearing timers\");\n  if (timer1) clearTimeout(timer1);\n  if (timer2) clearTimeout(timer2);\n\n  // Show allSpeechBubblesWrapper and typingDots\n  console.log(\"showTypingAnimation(): showing allSpeechBubblesWrapper and typingDots\");\n  allSpeechBubblesWrapper.style.display = \"\";\n  speechBubble.style.visibility = \"visible\";\n  typingDots.style.visibility = \"visible\";\n  typingDots.style.opacity = \"1\";\n\n  // After the duration you've set (e.g., 3 seconds), hide the dots, remove the container, and show the message\n  timer1 = setTimeout(() => {\n    console.log(\"showTypingAnimation(): timer1 called\");\n    // hide dots\n    typingDots.style.opacity = \"0\";\n    typingDots.style.visibility = \"hidden\";\n\n    // Create and show the first message\n    const newMessage = createMessage(\"Hello there! My name is Kevin.\");\n    document.querySelector(\".allSpeechBubblesWrapper\").appendChild(newMessage);\n\n    // Wait a second and then show another message\n    timer2 = setTimeout(() => {\n      console.log(\"showTypingAnimation(): timer2 called\");\n      const secondMessage = createMessage(\"I'm currently a Senior in Computer Science at Sacramento State. Personally, I'm really into Web and App Development, but I really just like coding in general!\");\n      document.querySelector(\".allSpeechBubblesWrapper\").appendChild(secondMessage);\n    }, 1200);\n  }, firstMessageDelay);\n}\n_c = TypingDots;\nfunction createMessage(text) {\n  console.log(\"createMessage() called\");\n  newMessage = document.createElement(\"div\");\n  newMessage.className = \"speechBubble fadeInSlideUp newSpeechBubble\";\n  newMessage.style.opacity = \"0\"; // Initial state as invisible\n  newMessage.style.display = \"block\";\n  const newText = document.createElement(\"p\");\n  newText.textContent = text;\n  newMessage.appendChild(newText);\n\n  // Add a slight delay before starting the fade-in and slide-in effects to ensure they don't start prematurely.\n  setTimeout(() => {\n    newMessage.style.opacity = \"1\";\n    newMessage.style.transform = \"translateY(0)\";\n  }, 50); // Increased to 50ms for safer timing\n\n  return newMessage;\n}\nfunction eraseMessage() {\n  //Remove the typing dots container from the layout\n  if (typingDots) {\n    typingDots.style.visibility = \"hidden\";\n    typingDots.style.opacity = \"0\";\n  }\n\n  // Remove all new speech bubbles\n  const newSpeechBubbles = document.querySelectorAll('.newSpeechBubble');\n  newSpeechBubbles.forEach(bubble => {\n    bubble.remove();\n  });\n  if (allSpeechBubblesWrapper) {\n    allSpeechBubblesWrapper.style.display = \"none\";\n  }\n}\nexport default TypingDots;\nvar _c;\n$RefreshReg$(_c, \"TypingDots\");","map":{"version":3,"names":["TypingDots","console","log","homeContent","style","display","allSpeechBubblesWrapper","document","getElementById","firstMessageDelay","querySelector","timer1","clearTimeout","timer2","speechBubble","visibility","typingDots","opacity","setTimeout","newMessage","createMessage","appendChild","secondMessage","_c","text","createElement","className","newText","textContent","transform","eraseMessage","newSpeechBubbles","querySelectorAll","forEach","bubble","remove","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Home/TypingDots.js"],"sourcesContent":["//--------------------------------------------------------------------------------------//\n//                                Typing Dots Animation                                 //\n//--------------------------------------------------------------------------------------//\n\nfunction TypingDots() {\n  console.log(\"showTypingAnimation() called\");\n\n\n\n  if (homeContent.style.display !== 'block') {\n    return; // Exit the function if homeContent is not visible\n  }\n  // let timer1, timer2;\n  const allSpeechBubblesWrapper = document.getElementById('allSpeechBubblesWrapper');\n  const firstMessageDelay = 1200; // 1000 = 1 second\n\n  document.querySelector(\".allSpeechBubblesWrapper\");\n\n  // Clear any existing timers if they exist\n  console.log(\"showTypingAnimation(): clearing timers\");\n  if (timer1) clearTimeout(timer1);\n  if (timer2) clearTimeout(timer2);\n\n  // Show allSpeechBubblesWrapper and typingDots\n  console.log(\"showTypingAnimation(): showing allSpeechBubblesWrapper and typingDots\");\n  allSpeechBubblesWrapper.style.display = \"\";\n  speechBubble.style.visibility = \"visible\";  \n  typingDots.style.visibility = \"visible\";\n  typingDots.style.opacity = \"1\";\n\n\n\n  // After the duration you've set (e.g., 3 seconds), hide the dots, remove the container, and show the message\n  timer1 = setTimeout(() => {\n    console.log(\"showTypingAnimation(): timer1 called\");\n    // hide dots\n    typingDots.style.opacity = \"0\";\n    typingDots.style.visibility = \"hidden\";\n\n    // Create and show the first message\n    const newMessage = createMessage(\"Hello there! My name is Kevin.\");\n    document.querySelector(\".allSpeechBubblesWrapper\").appendChild(newMessage);\n\n    \n\n    // Wait a second and then show another message\n    timer2 = setTimeout(() => {\n      console.log(\"showTypingAnimation(): timer2 called\");\n      const secondMessage = createMessage(\"I'm currently a Senior in Computer Science at Sacramento State. Personally, I'm really into Web and App Development, but I really just like coding in general!\");\n      document.querySelector(\".allSpeechBubblesWrapper\").appendChild(secondMessage);\n    }, 1200);\n  }, firstMessageDelay);\n}\n\nfunction createMessage(text) {\n  console.log(\"createMessage() called\");\n  newMessage = document.createElement(\"div\");\n  newMessage.className = \"speechBubble fadeInSlideUp newSpeechBubble\";\n  newMessage.style.opacity = \"0\";  // Initial state as invisible\n  newMessage.style.display = \"block\";\n\n\n  const newText = document.createElement(\"p\");\n  newText.textContent = text;\n  newMessage.appendChild(newText);\n\n  // Add a slight delay before starting the fade-in and slide-in effects to ensure they don't start prematurely.\n  setTimeout(() => {\n    newMessage.style.opacity = \"1\";\n    newMessage.style.transform = \"translateY(0)\";\n  }, 50); // Increased to 50ms for safer timing\n\n  return newMessage;\n}\n\nfunction eraseMessage() {\n\n  //Remove the typing dots container from the layout\n  if (typingDots) {\n      typingDots.style.visibility = \"hidden\";\n      typingDots.style.opacity = \"0\";\n  }\n\n  // Remove all new speech bubbles\n  const newSpeechBubbles = document.querySelectorAll('.newSpeechBubble');\n  newSpeechBubbles.forEach(bubble => {\n    bubble.remove();\n  });\n  \n\n  if (allSpeechBubblesWrapper) {\n    allSpeechBubblesWrapper.style.display = \"none\"; \n  }  \n}\n\nexport default TypingDots;"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,UAAUA,CAAA,EAAG;EACpBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAI3C,IAAIC,WAAW,CAACC,KAAK,CAACC,OAAO,KAAK,OAAO,EAAE;IACzC,OAAO,CAAC;EACV;EACA;EACA,MAAMC,uBAAuB,GAAGC,QAAQ,CAACC,cAAc,CAAC,yBAAyB,CAAC;EAClF,MAAMC,iBAAiB,GAAG,IAAI,CAAC,CAAC;;EAEhCF,QAAQ,CAACG,aAAa,CAAC,0BAA0B,CAAC;;EAElD;EACAT,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACrD,IAAIS,MAAM,EAAEC,YAAY,CAACD,MAAM,CAAC;EAChC,IAAIE,MAAM,EAAED,YAAY,CAACC,MAAM,CAAC;;EAEhC;EACAZ,OAAO,CAACC,GAAG,CAAC,uEAAuE,CAAC;EACpFI,uBAAuB,CAACF,KAAK,CAACC,OAAO,GAAG,EAAE;EAC1CS,YAAY,CAACV,KAAK,CAACW,UAAU,GAAG,SAAS;EACzCC,UAAU,CAACZ,KAAK,CAACW,UAAU,GAAG,SAAS;EACvCC,UAAU,CAACZ,KAAK,CAACa,OAAO,GAAG,GAAG;;EAI9B;EACAN,MAAM,GAAGO,UAAU,CAAC,MAAM;IACxBjB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnD;IACAc,UAAU,CAACZ,KAAK,CAACa,OAAO,GAAG,GAAG;IAC9BD,UAAU,CAACZ,KAAK,CAACW,UAAU,GAAG,QAAQ;;IAEtC;IACA,MAAMI,UAAU,GAAGC,aAAa,CAAC,gCAAgC,CAAC;IAClEb,QAAQ,CAACG,aAAa,CAAC,0BAA0B,CAAC,CAACW,WAAW,CAACF,UAAU,CAAC;;IAI1E;IACAN,MAAM,GAAGK,UAAU,CAAC,MAAM;MACxBjB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnD,MAAMoB,aAAa,GAAGF,aAAa,CAAC,gKAAgK,CAAC;MACrMb,QAAQ,CAACG,aAAa,CAAC,0BAA0B,CAAC,CAACW,WAAW,CAACC,aAAa,CAAC;IAC/E,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAEb,iBAAiB,CAAC;AACvB;AAACc,EAAA,GAhDQvB,UAAU;AAkDnB,SAASoB,aAAaA,CAACI,IAAI,EAAE;EAC3BvB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrCiB,UAAU,GAAGZ,QAAQ,CAACkB,aAAa,CAAC,KAAK,CAAC;EAC1CN,UAAU,CAACO,SAAS,GAAG,4CAA4C;EACnEP,UAAU,CAACf,KAAK,CAACa,OAAO,GAAG,GAAG,CAAC,CAAE;EACjCE,UAAU,CAACf,KAAK,CAACC,OAAO,GAAG,OAAO;EAGlC,MAAMsB,OAAO,GAAGpB,QAAQ,CAACkB,aAAa,CAAC,GAAG,CAAC;EAC3CE,OAAO,CAACC,WAAW,GAAGJ,IAAI;EAC1BL,UAAU,CAACE,WAAW,CAACM,OAAO,CAAC;;EAE/B;EACAT,UAAU,CAAC,MAAM;IACfC,UAAU,CAACf,KAAK,CAACa,OAAO,GAAG,GAAG;IAC9BE,UAAU,CAACf,KAAK,CAACyB,SAAS,GAAG,eAAe;EAC9C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAOV,UAAU;AACnB;AAEA,SAASW,YAAYA,CAAA,EAAG;EAEtB;EACA,IAAId,UAAU,EAAE;IACZA,UAAU,CAACZ,KAAK,CAACW,UAAU,GAAG,QAAQ;IACtCC,UAAU,CAACZ,KAAK,CAACa,OAAO,GAAG,GAAG;EAClC;;EAEA;EACA,MAAMc,gBAAgB,GAAGxB,QAAQ,CAACyB,gBAAgB,CAAC,kBAAkB,CAAC;EACtED,gBAAgB,CAACE,OAAO,CAACC,MAAM,IAAI;IACjCA,MAAM,CAACC,MAAM,CAAC,CAAC;EACjB,CAAC,CAAC;EAGF,IAAI7B,uBAAuB,EAAE;IAC3BA,uBAAuB,CAACF,KAAK,CAACC,OAAO,GAAG,MAAM;EAChD;AACF;AAEA,eAAeL,UAAU;AAAC,IAAAuB,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}