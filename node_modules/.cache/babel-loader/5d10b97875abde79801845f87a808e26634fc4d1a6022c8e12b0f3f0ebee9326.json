{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Projects/Projects.js\",\n  _s = $RefreshSig$();\n//--------------------------------------------------------------------------------------//\n//                                       Projects.js                                       //\n//--------------------------------------------------------------------------------------//\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Carousel from './Carousel.tsx'; // Credit: React Round Carousel by scriptex: https://github.com/scriptex/react-round-carousel\nimport DarkModeToggle from '../NavigationBar/DarkModeToggle';\nimport personal_project1 from '../images/slideshow_images/maplestory_app.gif';\nimport personal_project2 from '../images/slideshow_images/invaded_space.gif';\nimport personal_project3 from '../images/slideshow_images/bullseye.png';\nimport hackathon1 from '../images/slideshow_images/lyric_link.gif';\nimport hackathon2 from '../images/slideshow_images/att_empowher.png';\nimport hackathon3 from '../images/slideshow_images/datafest.png';\nimport coursework_project3 from '../images/slideshow_images/turing_machines.png';\nimport coursework_project1 from '../images/slideshow_images/data_visualization.png';\nimport './Projects.css';\n\n// Array of slides to use for slideshow pictures\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst project_data = [{\n  image: hackathon1,\n  description: \"lyric link test filler test test beep boop bert bert bert\",\n  captions: [{\n    text: 'SacHacks',\n    style: {}\n  }, {\n    text: 'React',\n    style: {\n      backgroundColor: 'blue'\n    }\n  }, {\n    text: 'Django',\n    style: {\n      backgroundColor: 'blue'\n    }\n  }]\n}, {\n  image: hackathon2,\n  captions: [{\n    text: 'AT&T: EmpowHer',\n    style: {\n      backgroundColor: ''\n    }\n  }, {\n    text: 'HTML',\n    style: {\n      backgroundColor: 'green'\n    }\n  }, {\n    text: 'CSS',\n    style: {\n      backgroundColor: 'green'\n    }\n  }]\n}, {\n  image: hackathon3,\n  captions: [{\n    text: 'Datafest',\n    style: {}\n  }, {\n    text: 'Pandas',\n    style: {\n      backgroundColor: 'blue'\n    }\n  }, {\n    text: 'Python',\n    style: {\n      backgroundColor: 'green'\n    }\n  }]\n}, {\n  image: personal_project1,\n  captions: [{\n    text: 'Maplestory',\n    style: {}\n  }, {\n    text: 'Flutter',\n    style: {\n      backgroundColor: 'blue'\n    }\n  }, {\n    text: 'Dart',\n    style: {\n      backgroundColor: 'green'\n    }\n  }]\n}, {\n  image: personal_project2,\n  caption: 'Invaded Space',\n  captions: [{\n    text: 'Game Jam',\n    style: {}\n  }, {\n    text: 'Unity',\n    style: {\n      backgroundColor: 'blue'\n    }\n  }, {\n    text: 'C#',\n    style: {\n      backgroundColor: 'green'\n    }\n  }]\n}, {\n  image: personal_project3,\n  caption: 'Bullseye',\n  captions: [{\n    text: 'Bullseye',\n    style: {}\n  }, {\n    text: 'SwiftUI',\n    style: {\n      backgroundColor: 'blue'\n    }\n  }, {\n    text: 'Swift',\n    style: {\n      backgroundColor: 'green'\n    }\n  }]\n}];\nfunction Projects() {\n  _s();\n  const [currentDescription, setCurrentDescription] = useState('');\n  const carouselRef = useRef < ref > null;\n  useEffect(() => {\n    const descriptionUpdater = () => {\n      var _carouselRef$current;\n      const currentIndex = (_carouselRef$current = carouselRef.current) === null || _carouselRef$current === void 0 ? void 0 : _carouselRef$current.getSelectedIndex();\n      if (currentIndex !== undefined) {\n        setCurrentDescription(project_data[currentIndex].description);\n      }\n    };\n\n    // Update description initially and on slide change\n    descriptionUpdater();\n    const interval = setInterval(descriptionUpdater, 1000); // Adjust the interval as needed\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Mapping data to carousel items for Carousel.tsx\n  const carouselItems = project_data.map((project, index) => ({\n    image: project.image,\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: project.captions.map((caption, capIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: caption.style,\n          children: caption.text\n        }, capIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n    // Add other properties if the carousel requires?\n  }));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    id: \"projects\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects__section\",\n      children: [/*#__PURE__*/_jsxDEV(Carousel, {\n        items: carouselItems /* other props */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects__description\",\n        children: currentDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(Projects, \"dBj3AhFzZ4e/DXkDDJVG4YwCUpc=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Carousel","DarkModeToggle","personal_project1","personal_project2","personal_project3","hackathon1","hackathon2","hackathon3","coursework_project3","coursework_project1","jsxDEV","_jsxDEV","project_data","image","description","captions","text","style","backgroundColor","caption","Projects","_s","currentDescription","setCurrentDescription","carouselRef","ref","descriptionUpdater","_carouselRef$current","currentIndex","current","getSelectedIndex","undefined","interval","setInterval","clearInterval","carouselItems","map","project","index","content","children","fileName","_jsxFileName","lineNumber","columnNumber","capIndex","className","id","items","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Personal_Website/src/Projects/Projects.js"],"sourcesContent":["//--------------------------------------------------------------------------------------//\n//                                       Projects.js                                       //\n//--------------------------------------------------------------------------------------//\n\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Carousel  from './Carousel.tsx'; // Credit: React Round Carousel by scriptex: https://github.com/scriptex/react-round-carousel\nimport DarkModeToggle from '../NavigationBar/DarkModeToggle';\nimport personal_project1 from '../images/slideshow_images/maplestory_app.gif';\nimport personal_project2 from '../images/slideshow_images/invaded_space.gif';\nimport personal_project3 from '../images/slideshow_images/bullseye.png';\nimport hackathon1 from '../images/slideshow_images/lyric_link.gif';\nimport hackathon2 from '../images/slideshow_images/att_empowher.png';\nimport hackathon3 from '../images/slideshow_images/datafest.png';\nimport coursework_project3 from '../images/slideshow_images/turing_machines.png';\nimport coursework_project1 from '../images/slideshow_images/data_visualization.png';\nimport './Projects.css';\n\n// Array of slides to use for slideshow pictures\nconst project_data = [\n    { \n        image: hackathon1, \n        description: \"lyric link test filler test test beep boop bert bert bert\",\n        captions: [\n            { text: 'SacHacks', style: { } },\n            { text: 'React', style: { backgroundColor: 'blue'} },\n            { text: 'Django', style: { backgroundColor: 'blue'} }\n        ]\n    },\n    { \n    image: hackathon2, \n    captions: [\n        { text: 'AT&T: EmpowHer', style: { backgroundColor: ''} },\n        { text: 'HTML', style: { backgroundColor: 'green'} },\n        { text: 'CSS', style: { backgroundColor: 'green'} },\n    ]\n\n    },\n    { \n    image: hackathon3, \n    captions: [\n        { text: 'Datafest', style: { } },\n        { text: 'Pandas', style: { backgroundColor: 'blue'} },\n        { text: 'Python', style: { backgroundColor: 'green'} }\n    ]\n    },\n    { \n    image: personal_project1, \n    captions: [\n        { text: 'Maplestory', style: { } },\n        { text: 'Flutter', style: { backgroundColor: 'blue'} },\n        { text: 'Dart', style: { backgroundColor: 'green'} }\n    ] \n    },\n    { \n    image: personal_project2, caption: 'Invaded Space',\n    captions: [\n        { text: 'Game Jam', style: { } },\n        { text: 'Unity', style: { backgroundColor: 'blue'} },\n        { text: 'C#', style: { backgroundColor: 'green'} }\n    ]  \n    },\n    { \n    image: personal_project3, caption: 'Bullseye', \n    captions: [\n        { text: 'Bullseye', style: { } },\n        { text: 'SwiftUI', style: { backgroundColor: 'blue'} },\n        { text: 'Swift', style: { backgroundColor: 'green'} }\n    ]    \n    },\n];\n\nfunction Projects() {\n    const [currentDescription, setCurrentDescription] = useState('');\n    const carouselRef = useRef<ref>(null);\n\n    useEffect(() => {\n        const descriptionUpdater = () => {\n            const currentIndex = carouselRef.current?.getSelectedIndex();\n            if (currentIndex !== undefined) {\n                setCurrentDescription(project_data[currentIndex].description);\n            }\n        };\n\n        // Update description initially and on slide change\n        descriptionUpdater();\n        const interval = setInterval(descriptionUpdater, 1000); // Adjust the interval as needed\n\n        return () => clearInterval(interval);\n    }, []);\n    \n    // Mapping data to carousel items for Carousel.tsx\n    const carouselItems = project_data.map((project, index) => ({\n        image: project.image,\n        content: (\n        <div key={index}>\n            <p>{project.description}</p>\n            <div>\n            {project.captions.map((caption, capIndex) => (\n                <span key={capIndex} style={caption.style}>\n                {caption.text}\n                </span>\n            ))}\n            </div>\n        </div>\n        ),\n        // Add other properties if the carousel requires?\n    }));\n\n    return (\n        <div className=\"projects\" id=\"projects\">\n        <div className=\"projects__section\">\n            {/* Carousel component */}\n            <Carousel items={carouselItems} /* other props */ />\n            <div className = \"projects__description\">{currentDescription}</div>\n        </div>\n        </div>\n    );\n    }\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}