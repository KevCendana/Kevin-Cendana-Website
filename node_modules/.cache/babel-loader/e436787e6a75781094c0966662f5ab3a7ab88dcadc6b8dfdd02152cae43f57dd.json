{"ast":null,"code":"// animateLines.js\nimport { gsap } from 'gsap';\nexport const AnimateLines = containerSelector => {\n  const container = document.querySelector(containerSelector);\n  const numberOfLines = 8;\n  const angleIncrement = 360 / numberOfLines;\n  for (let i = 0; i < numberOfLines; i++) {\n    const line = document.createElement('div');\n    line.classList.add('line');\n    // Inside your for loop in animateLines.js\n    line.style.top = '50%'; // Center vertically\n    line.style.left = '50%'; // Center horizontally\n    // Adjust the initial rotation so that lines are spread evenly in a circle\n    line.style.transform = `translate(-50%, -100%) rotate(${i * angleIncrement}deg)`;\n    container.appendChild(line);\n    gsap.fromTo(line, {\n      scale: 0,\n      rotation: i * angleIncrement,\n      transformOrigin: 'bottom center'\n    }, {\n      scale: 1,\n      opacity: 1,\n      duration: 0.5,\n      ease: 'elastic.out(1, 0.3)',\n      onComplete: () => gsap.fromTo(line, {\n        scale: 0,\n        // Ensure the rotation is applied as a CSS property\n        css: {\n          rotation: i * angleIncrement\n        },\n        transformOrigin: '50% 100%' // Adjust this line\n      }, {\n        scale: 1,\n        opacity: 1,\n        duration: 0.5,\n        ease: 'elastic.out(1, 0.3)',\n        onComplete: () => gsap.to(line, {\n          opacity: 0,\n          duration: 0.5\n        })\n      })\n    });\n  }\n};\n_c = AnimateLines;\nexport default AnimateLines;\nvar _c;\n$RefreshReg$(_c, \"AnimateLines\");","map":{"version":3,"names":["gsap","AnimateLines","containerSelector","container","document","querySelector","numberOfLines","angleIncrement","i","line","createElement","classList","add","style","top","left","transform","appendChild","fromTo","scale","rotation","transformOrigin","opacity","duration","ease","onComplete","css","to","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/react-app/src/Home/AnimateLines.js"],"sourcesContent":["// animateLines.js\nimport { gsap } from 'gsap';\n\nexport const AnimateLines = (containerSelector) => {\n  const container = document.querySelector(containerSelector);\n  const numberOfLines = 8;\n  const angleIncrement = 360 / numberOfLines;\n\n  for (let i = 0; i < numberOfLines; i++) {\n    const line = document.createElement('div');\n    line.classList.add('line');\n    // Inside your for loop in animateLines.js\nline.style.top = '50%'; // Center vertically\nline.style.left = '50%'; // Center horizontally\n// Adjust the initial rotation so that lines are spread evenly in a circle\nline.style.transform = `translate(-50%, -100%) rotate(${i * angleIncrement}deg)`;\n\n    container.appendChild(line);\n    gsap.fromTo(line,\n      {\n        scale: 0,\n        rotation: i * angleIncrement,\n        transformOrigin: 'bottom center',\n      },\n      {\n        scale: 1,\n        opacity: 1,\n        duration: 0.5,\n        ease: 'elastic.out(1, 0.3)',\n        onComplete: () => gsap.fromTo(line, {\n            scale: 0,\n            // Ensure the rotation is applied as a CSS property\n            css: { rotation: i * angleIncrement },\n            transformOrigin: '50% 100%', // Adjust this line\n          }, {\n            scale: 1,\n            opacity: 1,\n            duration: 0.5,\n            ease: 'elastic.out(1, 0.3)',\n            onComplete: () => gsap.to(line, { opacity: 0, duration: 0.5 })\n          }\n        )\n      }\n    );\n  }\n};\n\n\n\nexport default AnimateLines;"],"mappings":"AAAA;AACA,SAASA,IAAI,QAAQ,MAAM;AAE3B,OAAO,MAAMC,YAAY,GAAIC,iBAAiB,IAAK;EACjD,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAACH,iBAAiB,CAAC;EAC3D,MAAMI,aAAa,GAAG,CAAC;EACvB,MAAMC,cAAc,GAAG,GAAG,GAAGD,aAAa;EAE1C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;IACtC,MAAMC,IAAI,GAAGL,QAAQ,CAACM,aAAa,CAAC,KAAK,CAAC;IAC1CD,IAAI,CAACE,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC1B;IACJH,IAAI,CAACI,KAAK,CAACC,GAAG,GAAG,KAAK,CAAC,CAAC;IACxBL,IAAI,CAACI,KAAK,CAACE,IAAI,GAAG,KAAK,CAAC,CAAC;IACzB;IACAN,IAAI,CAACI,KAAK,CAACG,SAAS,GAAI,iCAAgCR,CAAC,GAAGD,cAAe,MAAK;IAE5EJ,SAAS,CAACc,WAAW,CAACR,IAAI,CAAC;IAC3BT,IAAI,CAACkB,MAAM,CAACT,IAAI,EACd;MACEU,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAEZ,CAAC,GAAGD,cAAc;MAC5Bc,eAAe,EAAE;IACnB,CAAC,EACD;MACEF,KAAK,EAAE,CAAC;MACRG,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,IAAI,EAAE,qBAAqB;MAC3BC,UAAU,EAAEA,CAAA,KAAMzB,IAAI,CAACkB,MAAM,CAACT,IAAI,EAAE;QAChCU,KAAK,EAAE,CAAC;QACR;QACAO,GAAG,EAAE;UAAEN,QAAQ,EAAEZ,CAAC,GAAGD;QAAe,CAAC;QACrCc,eAAe,EAAE,UAAU,CAAE;MAC/B,CAAC,EAAE;QACDF,KAAK,EAAE,CAAC;QACRG,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,GAAG;QACbC,IAAI,EAAE,qBAAqB;QAC3BC,UAAU,EAAEA,CAAA,KAAMzB,IAAI,CAAC2B,EAAE,CAAClB,IAAI,EAAE;UAAEa,OAAO,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAI,CAAC;MAC/D,CACF;IACF,CACF,CAAC;EACH;AACF,CAAC;AAACK,EAAA,GA1CW3B,YAAY;AA8CzB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}